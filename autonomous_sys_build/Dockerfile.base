FROM docker.io/harishanand95/cudagl:12.3.0-devel-ubuntu22.04
# Note: This dockerfile is a reduced form of Will Kessler's work, as that results in a large number of layers
# which is difficult to manage in production

ARG SOURCEFORGE=https://sourceforge.net/projects
ARG TURBOVNC_VERSION=2.1.2
ARG VIRTUALGL_VERSION=2.6.2
ARG LIBJPEG_VERSION=1.5.2
ARG WEBSOCKIFY_VERSION=0.11.0
ARG NOVNC_VERSION=1.4.0

# Install base packages and dependencies
RUN dpkg --add-architecture i386 && \
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    # Base utilities
    ca-certificates curl wget apt-utils vim less lsof net-tools git htop \
    gedit gedit-plugins unzip zip psmisc xz-utils \
    software-properties-common \
    # Development tools
    gcc libc6-dev make cmake doxygen \
    python3 python3-pip python3-dev python-is-python3 \
    # Libraries and dependencies (including 32-bit)
    libglib2.0-0 libxext6 libsm6 libxrender1 \
    libsuitesparse-dev libeigen3-dev libsdl1.2-dev \
    libegl1-mesa:amd64 libegl1-mesa:i386 \
    libxtst6:i386 \
    libxv1:amd64 libxv1:i386 \
    libglu1-mesa:amd64 libglu1-mesa:i386 \
    libglu1 \
    # Desktop environment
    lxde lxde-common lxsession \
    xvfb tmux terminator zenity mesa-utils \
    x11-xkb-utils xauth xfonts-base xkb-data && \
    rm -rf /var/lib/apt/lists/*

# Install Firefox from Mozilla PPA
RUN add-apt-repository ppa:mozillateam/ppa && \
    echo 'Package: *\nPin: release o=LP-PPA-mozillateam\nPin-Priority: 1001' > /etc/apt/preferences.d/mozilla-firefox && \
    apt-get update && \
    apt-get install -y --no-install-recommends firefox && \
    rm -rf /var/lib/apt/lists/*

# Install TurboVNC, VirtualGL, and noVNC
RUN cd /tmp && \
    curl -fsSL -O ${SOURCEFORGE}/turbovnc/files/${TURBOVNC_VERSION}/turbovnc_${TURBOVNC_VERSION}_amd64.deb \
    -O ${SOURCEFORGE}/libjpeg-turbo/files/${LIBJPEG_VERSION}/libjpeg-turbo-official_${LIBJPEG_VERSION}_amd64.deb \
    -O ${SOURCEFORGE}/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl_${VIRTUALGL_VERSION}_amd64.deb \
    -O ${SOURCEFORGE}/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl32_${VIRTUALGL_VERSION}_amd64.deb && \
    dpkg -i *.deb || true && \
    apt-get update && apt-get -f install -y && \
    dpkg -i *.deb && \
    rm -f /tmp/*.deb && \
    sed -i 's/$host:/unix:/g' /opt/TurboVNC/bin/vncserver

# Install and configure noVNC
RUN curl -fsSL https://github.com/novnc/noVNC/archive/v${NOVNC_VERSION}.tar.gz | tar -xzf - -C /opt && \
    curl -fsSL https://github.com/novnc/websockify/archive/v${WEBSOCKIFY_VERSION}.tar.gz | tar -xzf - -C /opt && \
    mv /opt/noVNC-${NOVNC_VERSION} /opt/noVNC && \
    chmod -R a+w /opt/noVNC && \
    mv /opt/websockify-${WEBSOCKIFY_VERSION} /opt/websockify && \
    cd /opt/websockify && make && \
    cd /opt/noVNC/utils && \
    ln -s /opt/websockify

# Set environment variables
ENV PATH="${PATH}:/opt/VirtualGL/bin"

# Configure locale and basic environment
RUN apt-get update && apt-get install -y locales && \
    rm -rf /var/lib/apt/lists/* && \
    echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
    locale-gen && \
    printf "%s\n" \
    "export LC_ALL=en_US.UTF-8" \
    "export LANG=en_US.UTF-8" \
    "export LANGUAGE=en_US.UTF-8" >> /root/.bashrc && \
    printf "%s\n" \
    "alias cp=\"cp -i\"" \
    "alias mv=\"mv -i\"" \
    "alias rm=\"rm -i\"" >> /root/.bash_aliases

# Setup VNC and desktop environment
RUN mkdir -p /root/Desktop /root/.config/terminator /root/.vnc && \
    perl -pi -e 's/^Exec=terminator$/Exec=terminator -e "vglrun bash"/g' /usr/share/applications/terminator.desktop && \
    sed -i '/force_color_prompt/s/^#//g' ~/.bashrc

# Configure VNC security settings
# RUN echo "#!/bin/sh\nxrdb $HOME/.Xresources\nstartxfce4 &" > /root/.vnc/xstartup && \
#     chmod +x /root/.vnc/xstartup && \
#     echo "no-remote-connections\nno-httpd\nno-x11-tcp-connections" >> /root/.vnc/config

# Copy configuration files
COPY index.html /opt/noVNC/index.html
COPY xorg.conf /etc/X11/xorg.conf
COPY terminator.desktop /root/Desktop/
COPY ./terminator_config /root/.config/terminator/config
COPY ./self.pem /root/self.pem
COPY ./launch.sh /opt/noVNC/utils/launch.sh
COPY ./xstartup.turbovnc /root/.vnc/xstartup.turbovnc
COPY start_desktop.sh /usr/local/bin/start_desktop.sh

# Set permissions
RUN chmod a+x /root/.vnc/xstartup.turbovnc && \
    chmod +x /root/Desktop/*.desktop && \
    chmod +x /usr/local/bin/start_desktop.sh && \
    chmod +x /opt/noVNC/utils/launch.sh

# Expose noVNC port
EXPOSE 40001

# Healthcheck
# HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
#     CMD pgrep Xvnc > /dev/null && \
#         curl -f http://localhost:40001/vnc.html > /dev/null 2>&1 || exit 1

# Start the desktop environment
CMD ["/usr/local/bin/start_desktop.sh"]
